
@model Jewels.Models.SanPham

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<style>
    .txt-Mota {
        height: 100px;
    }
</style>

<div class="container">
    <div class="container-fluid namecreate">
        <h2>Thêm sản phẩm mới</h2>


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="row">
                    <div class="col-sm-2"> @Html.LabelFor(model => model.SanPhamName, htmlAttributes: new { @class = "control-label " })</div>
                    <div class="col-sm-8">
                        @Html.EditorFor(model => model.SanPhamName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SanPhamName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />

                <div class="row">
                    <div class="col-sm-2"> <label class="control-label">Loại sản phẩm</label> </div>
                    <div class="col-sm-3">
                        @Html.DropDownList("LoaiSPID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.LoaiSPID, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-sm-2">  <label class="control-label">Chất liệu sản phẩm</label></div>
                    <div class="col-sm-3">
                        @Html.DropDownList("ChatLieuSPID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ChatLieuSPID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />

                <div class="row">
                    <div class="col-sm-2"> @Html.LabelFor(model => model.GiaBan, htmlAttributes: new { @class = "control-label " })</div>
                    <div class="col-sm-3">
                        @Html.EditorFor(model => model.GiaBan, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.GiaBan, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-sm-2"> @Html.LabelFor(model => model.SoLuong, htmlAttributes: new { @class = "control-label sl" })</div>
                    <div class="col-sm-3">
                        @Html.EditorFor(model => model.SoLuong, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SoLuong, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />

                <div class="row">
                    <div class="col-sm-2"> @Html.LabelFor(model => model.Moi, htmlAttributes: new { @class = "control-label " })</div>
                    <div class="col-sm-1">
                        <select name="Moi" style="width:70px;">
                            <option>Yes</option>
                            <option>No</option>
                        </select>
                        @Html.ValidationMessageFor(model => model.Moi, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-sm-2"> @Html.LabelFor(model => model.BanChay, htmlAttributes: new { @class = "control-label" })</div>
                    <div class="col-sm-1">
                        <select name="BanChay" style="width:70px;">
                            <option>Yes</option>
                            <option>No</option>
                        </select>

                        @Html.ValidationMessageFor(model => model.BanChay, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-sm-2"> @Html.LabelFor(model => model.Hot, htmlAttributes: new { @class = "control-label " })</div>
                    <div class="col-sm-1">
                        <select name="Hot" style="width:70px;">
                            <option>Yes</option>
                            <option>No</option>
                        </select>

                        @Html.ValidationMessageFor(model => model.Hot, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />

                <div class="row">
                    <div class="col-sm-2">  @Html.LabelFor(model => model.UrlHinhAnhSP, htmlAttributes: new { @class = "control-label " })</div>
                    <div class="col-sm-10">
                        @Html.EditorFor(model => model.UrlHinhAnhSP, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UrlHinhAnhSP, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />

                <div class="row">
                    <div class="col-sm-2"> @Html.LabelFor(model => model.MoTa, htmlAttributes: new { @class = "control-label " })</div>
                    <div class="col-sm-10 ">
                        <textarea id="form_message" name="MoTa" class="form-control" placeholder="Mô tả sản phẩm" rows="4" required="required" data-error="Please, leave us a message."></textarea>
                        @Html.ValidationMessageFor(model => model.MoTa, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default cre-btn" />
                        |
                        <button class="btn back-btn">
                            @Html.ActionLink("Back to List", "Index")
                        </button>
                    </div>
                </div>
            </div>
        }


    </div>
</div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
